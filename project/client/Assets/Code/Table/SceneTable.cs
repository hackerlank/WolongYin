// Generated by the Table Description Language compiler.  DO NOT EDIT!
// source: scene_table.prot

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;


public class SceneTable : Table.Binary, Table.IKey
{
	#region PosStruct
	public class PosStruct : Table.Binary
	{
		List<Int32> m_list;
		
		public List<Int32> list
		{
			get { return m_list; }
		}
		
		public override int Load(byte[] buffer, int index)
		{
			Table.Loader loader = new Table.Loader(ref buffer, index);
			loader.Load(ref m_list);
			return loader.Size;
		}
	}
	#endregion
	
	UInt32       m_baseid;
	Table.String m_name;
	Table.String m_name_suffix;
	Table.String m_bgm;
	Table.String m_loading_pic;
	PosStruct    m_player_bornpos;
	UInt32       m_player_angal;
	PosStruct    m_enemy_bornpos;
	UInt32       m_enemy_angal;
	Table.String m_award_m;
	Table.String m_award_n;
	Table.String m_award_x;
	Table.String m_award_y;
	UInt32       m_enemy_1;
	UInt32       m_enemy_2;
	UInt32       m_enemy_3;
	UInt32       m_enemy_4;
	UInt32       m_enemy_5;
	UInt32       m_enemy_6;
	
	public const UInt32 Version = 2911362786;
	
	public UInt64 Key()
	{
		return m_baseid;
	}
	
	public UInt32 baseid
	{
		get { return m_baseid; }
	}
	
	public string name
	{
		get { return m_name; }
	}
	
	public string nameSuffix
	{
		get { return m_name_suffix; }
	}
	
	public string bgm
	{
		get { return m_bgm; }
	}
	
	public string loadingPic
	{
		get { return m_loading_pic; }
	}
	
	public PosStruct playerBornpos
	{
		get { return m_player_bornpos; }
	}
	
	public UInt32 playerAngal
	{
		get { return m_player_angal; }
	}
	
	public PosStruct enemyBornpos
	{
		get { return m_enemy_bornpos; }
	}
	
	public UInt32 enemyAngal
	{
		get { return m_enemy_angal; }
	}
	
	public string awardM
	{
		get { return m_award_m; }
	}
	
	public string awardN
	{
		get { return m_award_n; }
	}
	
	public string awardX
	{
		get { return m_award_x; }
	}
	
	public string awardY
	{
		get { return m_award_y; }
	}
	
	public UInt32 enemy1
	{
		get { return m_enemy_1; }
	}
	
	public UInt32 enemy2
	{
		get { return m_enemy_2; }
	}
	
	public UInt32 enemy3
	{
		get { return m_enemy_3; }
	}
	
	public UInt32 enemy4
	{
		get { return m_enemy_4; }
	}
	
	public UInt32 enemy5
	{
		get { return m_enemy_5; }
	}
	
	public UInt32 enemy6
	{
		get { return m_enemy_6; }
	}
	
	public override int Load(byte[] buffer, int index)
	{
		Table.Loader loader = new Table.Loader(ref buffer, index);
		loader.Load(ref m_baseid).Load(ref m_name).Load(ref m_name_suffix).Load(ref m_bgm).Load(ref m_loading_pic).Load(ref m_player_bornpos).Load(ref m_player_angal).Load(ref m_enemy_bornpos).Load(ref m_enemy_angal).Load(ref m_award_m).Load(ref m_award_n).Load(ref m_award_x).Load(ref m_award_y).Load(ref m_enemy_1).Load(ref m_enemy_2).Load(ref m_enemy_3).Load(ref m_enemy_4).Load(ref m_enemy_5).Load(ref m_enemy_6);
		return loader.Size;
	}
}

// source: scene_table.xls, sheet: Scene
public sealed class SceneTableManager : Table.Manager<SceneTable>
{
	private static readonly SceneTableManager ms_instance = new SceneTableManager();
	
	private SceneTableManager()
	{
	}
	
	public static SceneTableManager instance
	{
		get { return ms_instance; }
	}
	
	public string source
	{
		get { return "scene_table.tbl"; }
	}
	
	public bool Load(string path)
	{
		Register();
		return Load(path, source, SceneTable.Version);
	}
	
	public SceneTable Find(UInt32 key)
	{
		return FindInternal(key);
	}
	
	#region new helper
	public static object NewSceneTable()
	{
		return new SceneTable();
	}
	public static object NewSceneTablePosStruct()
	{
		return new SceneTable.PosStruct();
	}
	
	private static void Register()
	{
		Table.NewHelper.Clear();
		Table.NewHelper.Register(typeof(SceneTable), NewSceneTable);
		Table.NewHelper.Register(typeof(SceneTable.PosStruct), NewSceneTablePosStruct);
	}
	#endregion
}

